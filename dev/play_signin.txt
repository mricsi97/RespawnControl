public class MainActivity {
	public static final int RC_SIGN_IN = 0;
    private GoogleSignInClient signInClient;
    private GoogleSignInAccount account;
	
	@Override
    protected void onCreate(Bundle savedInstanceState) {
		GoogleSignInOptions signInOptions = GoogleSignInOptions.DEFAULT_GAMES_SIGN_IN;
        signInClient = GoogleSignIn.getClient(this, signInOptions);
		
		final SignInButton btnSignIn = (SignInButton) findViewById(R.id.btnSignIn);
        btnSignIn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startInteractiveSignIn();
            }
        });

        final Button btnSignOut = (Button) findViewById(R.id.btnSignOut);
        btnSignOut.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                signOut();
            }
        });
	}

    @Override
    protected void onResume() {
        super.onResume();

        signIn();
    }

    private void signIn() {
        // Check if already signed in
        GoogleSignInAccount lastSignedInAccount = GoogleSignIn.getLastSignedInAccount(this);
        if(lastSignedInAccount != null && GoogleSignIn.hasPermissions(lastSignedInAccount)) {
            account = lastSignedInAccount;
            displaySignOutButton();
            return;
        }
        // If not already signed in, try silent sign-in
        signInClient
                .silentSignIn()
                .addOnCompleteListener(
                        this,
                        new OnCompleteListener<GoogleSignInAccount>() {
                            @Override
                            public void onComplete(@NonNull Task<GoogleSignInAccount> task) {
                                if(task.isSuccessful()) {
                                    account = task.getResult();
                                    displaySignOutButton();
                                } else {
                                    displaySignInButton();
                                }
                            }
                        }
                );
    }

    private void startInteractiveSignIn() {
        Intent intent = signInClient.getSignInIntent();
        startActivityForResult(intent, RC_SIGN_IN);
    }

    private void signOut() {
        signInClient.signOut().addOnCompleteListener(this,
                new OnCompleteListener<Void>() {
                    @Override
                    public void onComplete(@NonNull Task<Void> task) {
                        displaySignInButton();
                    }
                });
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if(requestCode == RC_SIGN_IN) {
            GoogleSignInResult result = Auth.GoogleSignInApi.getSignInResultFromIntent(data);
            if(result.isSuccess()) {
                account = result.getSignInAccount();
                displaySignOutButton();
            } else {
                displaySignInButton();
                String message = result.getStatus().getStatusMessage();
                if(message == null || message.isEmpty()) {
                    message = getString(R.string.signin_other_error);
                }
                new AlertDialog.Builder(this).setMessage(message)
                        .setNeutralButton(android.R.string.ok, null).show();
            }
        }
    }

    private void displaySignOutButton() {
        PlayersClient playersClient = Games.getPlayersClient(this, account);
        Task<Player> task = playersClient.getCurrentPlayer();
        task.addOnCompleteListener(this,
                new OnCompleteListener<Player>() {
                    @Override
                    public void onComplete(@NonNull Task<Player> task) {
                        if(task.isSuccessful()) {
                            Player player = task.getResult();

                            final Button btnSignOut = (Button) findViewById(R.id.btnSignOut);
                            btnSignOut.setVisibility(View.VISIBLE);
                            btnSignOut.setText(player.getDisplayName());

                            findViewById(R.id.btnSignIn).setVisibility(View.GONE);
                        } else {
                            ApiException apiException = (ApiException) task.getException();
                            int statusCode = apiException.getStatusCode();
                            if(statusCode == CommonStatusCodes.SIGN_IN_REQUIRED) {
                                startInteractiveSignIn();
                            }
                        }
                    }
                });
    }

    private void displaySignInButton() {
        findViewById(R.id.btnSignIn).setVisibility(View.VISIBLE);
        findViewById(R.id.btnSignOut).setVisibility(View.GONE);
    }
}

activity_main.xml:

    <com.google.android.gms.common.SignInButton
        android:id="@+id/btnSignIn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintBottom_toBottomOf="@id/btnSettings"
        android:layout_marginBottom="5dp"/>

    <Button
        android:id="@+id/btnSignOut"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:background="@color/colorPrimaryDark"
        android:textColor="@android:color/white"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintBottom_toBottomOf="@id/btnSettings"
        android:layout_marginBottom="8dp" />